{"version":3,"sources":["components/CountrySelector/index.js","components/Highlight/HighlightCard.js","components/Highlight/index.js","components/Charts/LineChart/index.js","components/Summary/index.js","App.js","api/index.js","index.js"],"names":["useStyles","makeStyles","theme","formControl","margin","spacing","CountrySelector","value","handleOnChange","countries","FormControl","className","InputLabel","htmlFor","shrink","NativeSelect","onChange","inputProps","name","id","map","country","ISO2","toLowerCase","Country","FormHelperText","wrapper","props","type","borderLeft","title","fontSize","marginBottom","count","fontWeight","HighlightCard","styles","Card","CardContent","Typography","component","variant","end","duration","separator","Highlight","report","data","length","summary","Confirmed","Recovered","Deaths","Grid","container","style","marginTop","item","sm","xs","LineChart","useState","options","setOptions","reportType","setReportType","useEffect","customData","slice","chart","height","text","xAxis","categories","momnet","Date","format","crosshair","colors","yAxis","min","tooltip","headerFormat","pointFormat","footerFormat","shared","useHTML","plotOptions","column","pointPadding","borderWidth","series","generateOptions","ButtonGroup","size","display","justifyContent","Button","color","onClick","highcharts","Highcharts","React","memo","Summary","moment","locale","App","setCountries","selectedCountryId","setSelectedCountryId","setReport","axios","get","then","res","console","log","sortBy","Slug","find","pop","Container","e","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.157eb2a2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n    FormControl,\r\n    FormHelperText,\r\n    InputLabel,\r\n    makeStyles,\r\n    NativeSelect,\r\n} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: `${theme.spacing(3)}px 0`,\r\n    },\r\n}));\r\n\r\nexport default function CountrySelector({ value, handleOnChange, countries }) {\r\n    return (\r\n        <FormControl className={useStyles.formControl}>\r\n            <InputLabel htmlFor=\"country-selector\" shrink>\r\n                Quốc gia\r\n            </InputLabel>\r\n            <NativeSelect\r\n                value={value}\r\n                onChange={handleOnChange}\r\n                inputProps={{\r\n                    name: \"country\",\r\n                    id: \"country-selector\",\r\n                }}\r\n            >\r\n                {countries.map((country) => {\r\n                    return (\r\n                        <option\r\n                            key={country.ISO2}\r\n                            value={country.ISO2.toLowerCase()}\r\n                        >\r\n                            {country.Country}\r\n                        </option>\r\n                    );\r\n                })}\r\n            </NativeSelect>\r\n            <FormHelperText>Lựa chọn quốc gia</FormHelperText>\r\n        </FormControl>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { Card, CardContent, Typography, makeStyles } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\n\r\nconst useStyles = makeStyles({\r\n    wrapper: (props) => {\r\n        if (props.type === \"confirmed\")\r\n            return { borderLeft: \"5px solid #c9302c\" };\r\n        if (props.type === \"recovered\")\r\n            return { borderLeft: \"5px solid #28a745\" };\r\n        else return { borderLeft: \"5px solid gray\" };\r\n    },\r\n    title: {\r\n        fontSize: 18,\r\n        marginBottom: 5,\r\n    },\r\n    count: {\r\n        fontWeight: \"bold\",\r\n        fontSize: 18,\r\n    },\r\n});\r\n\r\nexport default function HighlightCard({ title, count, type }) {\r\n    const styles = useStyles({ type });\r\n\r\n    return (\r\n        <Card className={styles.wrapper}>\r\n            <CardContent>\r\n                <Typography\r\n                    component=\"p\"\r\n                    variant=\"body2\"\r\n                    className={styles.title}\r\n                >\r\n                    {title}\r\n                </Typography>\r\n                <Typography\r\n                    component=\"span\"\r\n                    variant=\"body2\"\r\n                    className={styles.count}\r\n                >\r\n                    <CountUp end={count || 0} duration={2} separator=\" \" />\r\n                </Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport HighlightCard from \"./HighlightCard\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nexport default function Highlight({ report }) {\r\n    const data = report && report.length ? report[report.length - 1] : [];\r\n\r\n    const summary = [\r\n        {\r\n            title: \"Số ca nhiễm\",\r\n            count: data.Confirmed,\r\n            type: \"confirmed\",\r\n        },\r\n        {\r\n            title: \"Khỏi\",\r\n            count: data.Recovered,\r\n            type: \"recovered\",\r\n        },\r\n        {\r\n            title: \"Tử vong\",\r\n            count: data.Deaths,\r\n            type: \"death\",\r\n        },\r\n    ];\r\n\r\n    return (\r\n        <Grid container spacing={3} style={{ marginTop: 10 }}>\r\n            {summary.map((item) => (\r\n                <Grid item sm={4} xs={12} key={item.type}>\r\n                    <HighlightCard\r\n                        title={item.title}\r\n                        count={item.count}\r\n                        type={item.type}\r\n                    />\r\n                </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport Highcharts from \"highcharts\";\r\nimport momnet from \"moment\";\r\nimport { Button, ButtonGroup } from \"@material-ui/core\";\r\n\r\nconst generateOptions = (data) => {\r\n    const categories = data.map((item) =>\r\n        momnet(item.Date).format(\"DD/MM/YYYY\")\r\n    );\r\n\r\n    return {\r\n        chart: {\r\n            height: 500,\r\n        },\r\n        title: {\r\n            text: \"Tổng ca nhiễm\",\r\n        },\r\n        xAxis: {\r\n            categories: categories,\r\n            crosshair: true,\r\n        },\r\n        colors: [\"#F3585B\"],\r\n        yAxis: {\r\n            min: 0,\r\n            title: {\r\n                text: null,\r\n            },\r\n        },\r\n        tooltip: {\r\n            headerFormat:\r\n                '<span style=\"font-size:10px\">{point.key}</span><table>',\r\n            pointFormat:\r\n                '<tr><td style=\"color:{series.color};padding:0\">{series.name}: </td>' +\r\n                '<td style=\"padding:0\"><b>{point.y} ca</b></td></tr>',\r\n            footerFormat: \"</table>\",\r\n            shared: true,\r\n            useHTML: true,\r\n        },\r\n        plotOptions: {\r\n            column: {\r\n                pointPadding: 0.2,\r\n                borderWidth: 0,\r\n            },\r\n        },\r\n        series: [\r\n            {\r\n                name: \"Tổng ca nhiễm\",\r\n                data: data.map((item) => item.Confirmed),\r\n            },\r\n        ],\r\n    };\r\n};\r\n\r\nconst LineChart = ({ data }) => {\r\n    const [options, setOptions] = useState({});\r\n    const [reportType, setReportType] = useState(\"all\");\r\n\r\n    useEffect(() => {\r\n        let customData = [];\r\n        //xử lý thay đổi report type\r\n        switch (reportType) {\r\n            case \"all\":\r\n                customData = data;\r\n                break;\r\n            case \"30\":\r\n                customData = data.slice(data.length - 30);\r\n                break;\r\n            case \"7\":\r\n                customData = data.slice(data.length - 7);\r\n                break;\r\n            default:\r\n                customData = data;\r\n                break;\r\n        }\r\n        setOptions(generateOptions(customData));\r\n    }, [data, reportType]);\r\n\r\n    return (\r\n        <div>\r\n            <ButtonGroup\r\n                size=\"small\"\r\n                style={{ display: \"flex\", justifyContent: \"flex-end\" }}\r\n            >\r\n                <Button\r\n                    color={reportType === \"all\" ? \"secondary\" : \"\"}\r\n                    onClick={() => setReportType(\"all\")}\r\n                >\r\n                    Tất cả\r\n                </Button>\r\n                <Button\r\n                    color={reportType === \"30\" ? \"secondary\" : \"\"}\r\n                    onClick={() => setReportType(\"30\")}\r\n                >\r\n                    30 ngày\r\n                </Button>\r\n                <Button\r\n                    color={reportType === \"7\" ? \"secondary\" : \"\"}\r\n                    onClick={() => setReportType(\"7\")}\r\n                >\r\n                    7 ngày\r\n                </Button>\r\n            </ButtonGroup>\r\n            <HighchartsReact highcharts={Highcharts} options={options} />\r\n        </div>\r\n    );\r\n};\r\nexport default React.memo(LineChart);\r\n","import React from \"react\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport LineChart from \"../Charts/LineChart/index\";\r\n\r\nexport default function Summary({ report }) {\r\n    return (\r\n        <div style={{ marginTop: 10 }}>\r\n            <Grid container spacing={3}>\r\n                <Grid item sm={12} xs={12}>\r\n                    <LineChart data={report} />\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import CountrySelector from \"./components/CountrySelector/index\";\nimport Highlight from \"./components/Highlight/index\";\nimport Summary from \"./components/Summary/index\";\nimport { useState, useEffect } from \"react\";\nimport { getCountries, getReportByCountry } from \"./api/index\";\nimport { Container, Typography } from \"@material-ui/core\";\nimport { sortBy } from \"lodash\";\nimport moment from \"moment\";\nimport \"moment/locale/vi\";\nimport \"@fontsource/roboto\";\n\nmoment.locale(\"vi\");\n\nfunction App() {\n    const [countries, setCountries] = useState([]);\n    const [selectedCountryId, setSelectedCountryId] = useState(\"\"); //lưu trữ country hiện tại mà user chọn\n    const [report, setReport] = useState([]);\n\n    useEffect(() => {\n        getCountries().then((res) => {\n            console.log(\"getCountries\", { res });\n            const countries = sortBy(res.data, \"Country\");\n            setCountries(countries);\n            //load trang thì hiển thị thông tin của VN đầu tiên\n            setSelectedCountryId(\"vn\");\n        });\n    }, []);\n\n    const handleOnChange = (e) => {\n        setSelectedCountryId(e.target.value);\n    };\n\n    useEffect(() => {\n        if (selectedCountryId) {\n            const { Slug } = countries.find(\n                (country) => country.ISO2.toLowerCase() === selectedCountryId\n            );\n            //call api\n            getReportByCountry(Slug).then((res) => {\n                console.log(\"getReportByCountry\", { res });\n                //xóa item cuối cùng\n                res.data.pop();\n                setReport(res.data);\n            });\n        }\n    }, [countries, selectedCountryId]);\n\n    return (\n        <Container style={{ marginTop: 20 }}>\n            <Typography variant=\"h2\" component=\"h2\">\n                SỐ LIỆU COVID-19\n            </Typography>\n            <Typography>{moment().format(\"LLL\")}</Typography>\n            <CountrySelector\n                countries={countries}\n                handleOnChange={handleOnChange}\n                value={selectedCountryId}\n            />\n            <Highlight report={report} />\n            <Summary report={report} />\n        </Container>\n    );\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport const getCountries = () =>\r\n    axios.get(\"https://api.covid19api.com/countries\");\r\n\r\nexport const getReportByCountry = (country) =>\r\n    axios.get(`https://api.covid19api.com/dayone/country/${country}`);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}